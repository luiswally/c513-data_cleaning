[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.toTitlecase()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "sponsor",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "sponsor_cluster",
    "columnInsertIndex": 3,
    "description": "Create column sponsor_cluster at index 3 based on column sponsor using expression grel:value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "location",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "location_cluster",
    "columnInsertIndex": 15,
    "description": "Create column location_cluster at index 15 based on column location using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "sponsor_cluster",
          "expression": "value",
          "columnName": "sponsor_cluster",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "?",
                "l": "?"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "grel:if(value==\"?\",cells[\"location_cluster\"].value,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor_cluster using expression grel:if(value==\"?\",cells[\"location_cluster\"].value,value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "location_cluster",
          "expression": "value",
          "columnName": "location_cluster",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "?",
                "l": "?"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "location_cluster",
    "expression": "grel:if(value == \"?\", cells[\"sponsor_cluster\"].value, value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location_cluster using expression grel:if(value == \"?\", cells[\"sponsor_cluster\"].value, value)"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Red Star Line - Antwerpen - Ny",
          "Red Star Line - Antwerpen Ny",
          "Red Star Line - Antwerpen -ny",
          "Red Star Line -antwerpen Ny",
          "Red Star Line -antwerpen - Ny",
          "Red Star Line -antwerpen -ny",
          "Red Star Line- Antwerpen -ny",
          "Red Star Line- Antwerpen Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - Antwerpen - Ny"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd - Bremen",
          "Norddeutscher Lloyd Bremen;",
          "Norddeutscher Lloyd, Bremen",
          "Bremen Norddeutscher Lloyd",
          "Norddeutscher Lloyd -bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Fifth Avenue Hotel",
          "(fifth Avenue Hotel)",
          "(fifth Avenue Hotel?)",
          "Fifth Avenue Hotel (?)",
          "(fifth Avenue Hotel?}",
          "Fifth Avenue Hotel;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue Hotel"
      },
      {
        "from": [
          "Colonial Hotel",
          "Hotel Colonial",
          "(?colonial Hotel?)",
          "(colonial Hotel)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colonial Hotel"
      },
      {
        "from": [
          "[restaurant Name And/or Location Not Given]",
          "Restaurant Name And/or Location Not Given]",
          "Restaurant Name And/or Location Not Given",
          "[restaurant Name And/or Location Not Given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[restaurant Name And/or Location Not Given]"
      },
      {
        "from": [
          "Childs",
          "Childs'",
          "Child's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs"
      },
      {
        "from": [
          "Nordeutscher Lloyd Bremen",
          "Nordeutscher Lloyd, Bremen",
          "Nordeutscher Lloyd - Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nordeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Alta Vista Hotel",
          "(alta Vista Hotel)",
          "Alta Vista Hotel (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alta Vista Hotel"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park",
          "Gramercy Park Hotel; Hotel Gramercy Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "Compagnie Générale Transatlantique",
          "Compagnie Generale Transatlantique",
          "Compagnie Générale Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compagnie Générale Transatlantique"
      },
      {
        "from": [
          "(engineers Club)",
          "Engineers Club",
          "Engineers' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(engineers Club)"
      },
      {
        "from": [
          "Paquebot \\liberté\\\"\"",
          "Paquebot Liberte",
          "Paquebot \\liberte\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot \\liberté\\\"\""
      },
      {
        "from": [
          "Hamburg Amerika Linie",
          "Hamburg - Amerika Linie",
          "Hamburg- Amerika Linie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg Amerika Linie"
      },
      {
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs'"
      },
      {
        "from": [
          "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant"
      },
      {
        "from": [
          "Hotel Knickerbocker",
          "Hotel Knickerbocker (?)",
          "Knickerbocker Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Knickerbocker"
      },
      {
        "from": [
          "Waldorf-astoria",
          "(waldorf-astoria?)",
          "(waldorf-astoria)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria"
      },
      {
        "from": [
          "Hotel Majestic",
          "(majestic Hotel)",
          "Majestic Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic"
      },
      {
        "from": [
          "Red Star Line",
          "(red Star Line)",
          "Red Star Line -"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line"
      },
      {
        "from": [
          "U.S.M.S.",
          "Usms",
          "U.S.M.S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S."
      },
      {
        "from": [
          "U.S.M.S. New York",
          "Usms New York",
          "U.S.M.S New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. New York"
      },
      {
        "from": [
          "Delmonicos",
          "Delmonico's",
          "Delmonicos."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos"
      },
      {
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club"
      },
      {
        "from": [
          "Merchants' Club",
          "Merchant's Club",
          "Merchants Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchants' Club"
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "St, Denis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "Imperial Hotel",
          "Hotel Imperial",
          "Impérial Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial Hotel"
      },
      {
        "from": [
          "Grand Hotel Royal",
          "Grand Hôtel Royal",
          "Royal Grand Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel Royal"
      },
      {
        "from": [
          "American Medical Editors' Association",
          "American Medical Editor's Association",
          "American Medical Editors Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Medical Editors' Association"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kobe Maru",
          "Nippon Yusen Kaisha -s.S.Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kobe Maru"
      },
      {
        "from": [
          "Hotel Metropole",
          "Metropole Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Metropole"
      },
      {
        "from": [
          "S.S. American Shipper",
          "S.S. \"american Shipper\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. American Shipper"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kasuga",
          "Nippon Yusen Kaisha -s.S.Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kasuga"
      },
      {
        "from": [
          "Oceanic Steamship Company - Sonoma",
          "Oceanic Steamship Company _ Sonoma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Company - Sonoma"
      },
      {
        "from": [
          "The Merchant's Club Of Chicago",
          "The Merchants Club Of Chicago"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club Of Chicago"
      },
      {
        "from": [
          "Wabash Railway Company",
          "Wabash [railway Company]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wabash Railway Company"
      },
      {
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St Patrick"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Friendly Sons Of St. Patrick"
      },
      {
        "from": [
          "Hotel Europäischer Hof",
          "Hotel Europaischer Hof"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Europäischer Hof"
      },
      {
        "from": [
          "Cie Gle Transatlantique",
          "Cie. Gle. Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Gle Transatlantique"
      },
      {
        "from": [
          "De L'ange Hotel",
          "Hotel De L'ange"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "De L'ange Hotel"
      },
      {
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "from": [
          "King Frederik Viii",
          "(king Frederik Viii)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Frederik Viii"
      },
      {
        "from": [
          "Ancient And Honorable Artillery Co Of Massachusetts",
          "Ancient And Honorable Artillery Co. Of Massachusetts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient And Honorable Artillery Co Of Massachusetts"
      },
      {
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "Oceanic Steamship Co. - Sierra",
          "Oceanic Steamship Co.- Sierra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co. - Sierra"
      },
      {
        "from": [
          "St. Francis Hotel",
          "Hotel St. Francis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "Society Of Colonial Wars In The State Of New York",
          "Society Of The Society Of Colonial Wars In The State Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Society Of Colonial Wars In The State Of New York"
      },
      {
        "from": [
          "(king Alexander Of Servia)",
          "King Alexander Of Servia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(king Alexander Of Servia)"
      },
      {
        "from": [
          "Hotel Association Of New York City",
          "(hotel Association Of New York City)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Association Of New York City"
      },
      {
        "from": [
          "Muhlenkamper Fahrhaus",
          "Mühlenkamper Fährhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Muhlenkamper Fahrhaus"
      },
      {
        "from": [
          "Childs' Lunch Rooms",
          "Child's Lunch Rooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs' Lunch Rooms"
      },
      {
        "from": [
          "Oceanic Steamship Co. - S.S.Zealandia",
          "Oceanic Steamship Co. S.S.Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co. - S.S.Zealandia"
      },
      {
        "from": [
          "Hotel Manhattan",
          "Manhattan Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan"
      },
      {
        "from": [
          "Hotel Victory",
          "Victory Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victory"
      },
      {
        "from": [
          "Hotel Grunewald",
          "Grunewald Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Grunewald"
      },
      {
        "from": [
          "Hotel Algazar",
          "Algazar Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Algazar"
      },
      {
        "from": [
          "Fairmont Hotel",
          "Hotel Fairmont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel"
      },
      {
        "from": [
          "Alcazar Hotel",
          "Hotel Alcazar"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alcazar Hotel"
      },
      {
        "from": [
          "Cafe Savarin",
          "Café Savarin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Savarin"
      },
      {
        "from": [
          "St. Nicholas Hotel",
          "Hotel St. Nicholas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Nicholas Hotel"
      },
      {
        "from": [
          "Hotel Colorado",
          "Colorado Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Colorado"
      },
      {
        "from": [
          "Cosmopolitan Hotel",
          "Cosmopolitan... Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cosmopolitan Hotel"
      },
      {
        "from": [
          "Colombo Hotel",
          "Hotel Colombo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colombo Hotel"
      },
      {
        "from": [
          "(maharaja Of Baroda)",
          "Maharaja Of Baroda"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(maharaja Of Baroda)"
      },
      {
        "from": [
          "Palace Hotel",
          "Palace Hôtel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel"
      },
      {
        "from": [
          "Ancient Accepted Scottish Rite",
          "Ancient & Accepted Scottish Rite"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient Accepted Scottish Rite"
      },
      {
        "from": [
          "La Crépe",
          "La Crêpe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Crépe"
      },
      {
        "from": [
          "Oceanic Steamship Company -s.S.Zealander",
          "Oceanic Steamship Company - S.S.Zealander"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Company -s.S.Zealander"
      },
      {
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pirate's House"
      },
      {
        "from": [
          "Michigan Society Of The Sons Of The American Revolution",
          "Michigan Society Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Michigan Society Of The Sons Of The American Revolution"
      },
      {
        "from": [
          "Merchant's Club Of Boston",
          "Merchants' Club Of Boston"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchant's Club Of Boston"
      },
      {
        "from": [
          "Second Panel Sheriff's Jury",
          "Sheriff's Jury Second Panel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second Panel Sheriff's Jury"
      },
      {
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Elks Club House"
      },
      {
        "from": [
          "Hotel Du Musee",
          "Hotel Du Musee'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Du Musee"
      },
      {
        "from": [
          "Red Star Line - S.S.Westernland",
          "Red Star Line S.S.Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - S.S.Westernland"
      },
      {
        "from": [
          "Tavern On The Green",
          "The Tavern On The Green"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tavern On The Green"
      },
      {
        "from": [
          "Hotel Minot",
          "Minot Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Minot"
      },
      {
        "from": [
          "[restaurant And/or Location Not Given.]",
          "[restaurant And/or Location Not Given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[restaurant And/or Location Not Given.]"
      },
      {
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S New Amsterdam"
      },
      {
        "from": [
          "Sherry's",
          "Sherrys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry's"
      },
      {
        "from": [
          "Ambassador Hotel",
          "Hotel Ambassador"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ambassador Hotel"
      },
      {
        "from": [
          "Bristol Hotel",
          "Hotel Bristol"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bristol Hotel"
      },
      {
        "from": [
          "Schwarzwalder's Natur Weinhaus",
          "Schwarzwalders Natur Weinhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schwarzwalder's Natur Weinhaus"
      },
      {
        "from": [
          "(private)",
          "Private"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(private)"
      },
      {
        "from": [
          "The Commodore Hotel",
          "The Hotel Commodore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Commodore Hotel"
      },
      {
        "from": [
          "Algonquin Hotel",
          "Hotel Algonquin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Algonquin Hotel"
      },
      {
        "from": [
          "Hotel Worthy",
          "Worthy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Worthy"
      },
      {
        "from": [
          "Willard's Hotel",
          "Willards Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Willard's Hotel"
      },
      {
        "from": [
          "Grand Ballroom Of The Hotel Plaza",
          "The Grand Ballroom Of The Hotel Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Ballroom Of The Hotel Plaza"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. - S.S.Athabasca",
          "Canadian Pacific Railway Co.- S.S.Athabasca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. - S.S.Athabasca"
      },
      {
        "from": [
          "Century Club",
          "(century Club?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Century Club"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Astor"
      },
      {
        "from": [
          "(emperor Nicholas Ii",
          "Emperor Nicholas Ii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(emperor Nicholas Ii"
      },
      {
        "from": [
          "Hotel Chamberlin",
          "Chamberlin Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Chamberlin"
      },
      {
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grocers Hall"
      },
      {
        "from": [
          "Continental Hotel",
          "Hotel Continental"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Continental Hotel"
      },
      {
        "from": [
          "New York Central System",
          "[new York Central System]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System"
      },
      {
        "from": [
          "Northern Steamship Company/great Northern Ry Line.",
          "(northern Steamship Company/great Northern Ry Line.)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Northern Steamship Company/great Northern Ry Line."
      },
      {
        "from": [
          "Wisconsin Society - Sons Of The American Revolution",
          "Wisconsin Society Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wisconsin Society - Sons Of The American Revolution"
      },
      {
        "from": [
          "King Edward Vii",
          "(king Edward Vii)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Edward Vii"
      },
      {
        "from": [
          "St. Regis Hotel",
          "Hotel St. Regis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Regis Hotel"
      },
      {
        "from": [
          "Hotel Netherland",
          "Netherland Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Netherland"
      },
      {
        "from": [
          "St.Regis Hotel",
          "Hotel St.Regis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Regis Hotel"
      },
      {
        "from": [
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel"
      },
      {
        "from": [
          "Society Of Sons Of The Revolution In The State Of Missouri",
          "Society Sons Of The Revolution In The State Of Missouri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Society Of Sons Of The Revolution In The State Of Missouri"
      },
      {
        "from": [
          "Waldorf Astoria",
          "Waldorf- Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "Hotel Empire",
          "Empire Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Empire"
      },
      {
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reuben's"
      },
      {
        "from": [
          "Paquebot \\france\\\"\"",
          "Paquebot France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot \\france\\\"\""
      },
      {
        "from": [
          "Royal Palm Hotel",
          "Hotel Royal Palm"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Palm Hotel"
      },
      {
        "from": [
          "(english Hotel Restaurant)",
          "English Hotel Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(english Hotel Restaurant)"
      },
      {
        "from": [
          "George Washington Hotel",
          "Hotel George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "George Washington Hotel"
      },
      {
        "from": [
          "R.G.(?)",
          "Rg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.G.(?)"
      },
      {
        "from": [
          "Manhattan Club",
          "(manhattan Club)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Club"
      },
      {
        "from": [
          "Columbia Hotel",
          "Hotel Columbia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbia Hotel"
      },
      {
        "from": [
          "R.M.S. Oceanic",
          "Rms Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Oceanic"
      },
      {
        "from": [
          "New Grand Hotel",
          "Grand New Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Grand Hotel"
      },
      {
        "from": [
          "The Hotel Plaza",
          "The Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Hotel Plaza"
      },
      {
        "from": [
          "Cafe De Paris",
          "Café De Paris"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe De Paris"
      },
      {
        "from": [
          "Xiii Club",
          "Club Xiii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Xiii Club"
      },
      {
        "from": [
          "Place Viger Hotel",
          "Hotel Place Viger"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Place Viger Hotel"
      },
      {
        "from": [
          "Hotel Lafayette",
          "Lafayette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lafayette"
      },
      {
        "from": [
          "Empire State Society Of Sons Of The American Revolution",
          "Empire State Society Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Empire State Society Of Sons Of The American Revolution"
      },
      {
        "from": [
          "Lüchow's Restaurant",
          "Luchow's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lüchow's Restaurant"
      },
      {
        "from": [
          "Hotel Pennsylvania",
          "Pennsylvania Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pennsylvania"
      },
      {
        "from": [
          "Hotel Savoy",
          "Savoy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy"
      },
      {
        "from": [
          "Hotel Dennis",
          "Dennis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Dennis"
      },
      {
        "from": [
          "R.M.S. Parthia",
          "R.M.S. \"parthia\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Parthia"
      },
      {
        "from": [
          "Café Lafayette",
          "Cafe Lafayette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Lafayette"
      },
      {
        "from": [
          "Mouquin Restaurant And Wine Co",
          "Mouquin Restaurant And Wine Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mouquin Restaurant And Wine Co"
      },
      {
        "from": [
          "Imperial",
          "Imperial (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial"
      },
      {
        "from": [
          "S.S. Minnetonka",
          "S.S. \"minnetonka\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Minnetonka"
      },
      {
        "from": [
          "Hotel Commodore",
          "Commodore Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Commodore"
      },
      {
        "from": [
          "Usms St Louis",
          "U.S.M.S. St. Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Usms St Louis"
      },
      {
        "from": [
          "Hotel Winthrop",
          "Winthrop Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Winthrop"
      },
      {
        "from": [
          "Meyer's Hotel",
          "Meyers Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Meyer's Hotel"
      },
      {
        "from": [
          "(238 Eight Avenue)",
          "238 Eight Avenue"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(238 Eight Avenue)"
      },
      {
        "from": [
          "Hotel Phonix",
          "Phonix Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Phonix"
      },
      {
        "from": [
          "Harvard Club",
          "(harvard Club)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Harvard Club"
      },
      {
        "from": [
          "Hotel Jefferson",
          "Jefferson Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Jefferson"
      },
      {
        "from": [
          "Smith & Mcnell's",
          "Smith & Mcnells"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mcnell's"
      },
      {
        "from": [
          "Hotel D'angleterre",
          "D'angleterre Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel D'angleterre"
      },
      {
        "from": [
          "Union Club",
          "(union Club)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Club"
      },
      {
        "from": [
          "R.M.S. \"queen Mary\"\"\"",
          "R.M.S. \\queen Mary\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"queen Mary\"\"\""
      },
      {
        "from": [
          "American Legation",
          "(american Legation)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Legation"
      },
      {
        "from": [
          "Hotel Claremont",
          "Claremont Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Claremont"
      },
      {
        "from": [
          "Hotel Del Coronado",
          "Del Coronado Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Coronado"
      },
      {
        "from": [
          "Cafe Boulevard",
          "Café Boulevard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Boulevard"
      },
      {
        "from": [
          "Hotel Champlain",
          "Champlain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Champlain"
      },
      {
        "from": [
          "R.M.S. \\mauretania\\\"\"",
          "R.M.S. Mauretania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \\mauretania\\\"\""
      },
      {
        "from": [
          "Met-life Building",
          "Metlife Building"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Met-life Building"
      },
      {
        "from": [
          "S.S. \"frederik Viii\"",
          "S.S. Frederik Viii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"frederik Viii\""
      },
      {
        "from": [
          "Ballroom, The Plaza",
          "The Plaza Ballroom"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ballroom, The Plaza"
      },
      {
        "from": [
          "Menzies Hotel",
          "Menzie's Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Menzies Hotel"
      },
      {
        "from": [
          "American Bankers Association",
          "American Bankers' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Bankers Association"
      },
      {
        "from": [
          "(king Umberto)",
          "King Umberto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(king Umberto)"
      },
      {
        "from": [
          "King Haakon Vii",
          "(king Haakon Vii)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Haakon Vii"
      },
      {
        "from": [
          "Brevoort Restaurant",
          "Restaurant Brevoort"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brevoort Restaurant"
      },
      {
        "from": [
          "Promenade Café",
          "Cafe Promenade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Promenade Café"
      },
      {
        "from": [
          "Oceanic Steamship Company - Sierra",
          "Oceanic Steamship Company -sierra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Company - Sierra"
      },
      {
        "from": [
          "S.S. \"ile De France\"\"\"",
          "S.S. Ile De France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"ile De France\"\"\""
      },
      {
        "from": [
          "Master Printers Association",
          "Master Printers' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Master Printers Association"
      },
      {
        "from": [
          "Wärdshuset Stallmästaregarden",
          "Wärdshuset Stallmästaregården"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wärdshuset Stallmästaregarden"
      },
      {
        "from": [
          "Restaurant Mayan",
          "Mayan Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Mayan"
      },
      {
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota",
          "Military Order Of The Loyal Legion Of The United States. Commandery Of The State Of Minnesota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota"
      },
      {
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams' Restaurant"
      },
      {
        "from": [
          "New England Society In The City Of New York",
          "The New England Society In The City Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society In The City Of New York"
      },
      {
        "from": [
          "Grenoble Hotel",
          "Hotel Grenoble"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grenoble Hotel"
      },
      {
        "from": [
          "\\the Manor\\\"\"",
          "The Manor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\\the Manor\\\"\""
      },
      {
        "from": [
          "Penn. Rr - Pullman Dining Car Service",
          "Penn Rr - Pullman Dining Car Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penn. Rr - Pullman Dining Car Service"
      },
      {
        "from": [
          "Santa Fe Route",
          "Santa Fe' Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Santa Fe Route"
      },
      {
        "from": [
          "(harvard University)",
          "Harvard University"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(harvard University)"
      },
      {
        "from": [
          "Alpha Kappa Kappa",
          "Kappa Alpha"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alpha Kappa Kappa"
      },
      {
        "from": [
          "Windsor Hotel",
          "Hotel Windsor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Hotel"
      },
      {
        "from": [
          "Toyo Kisen Kaisha - Hong Kong Maru",
          "Toyo Kisen Kaisha -hong Kong Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Toyo Kisen Kaisha - Hong Kong Maru"
      },
      {
        "from": [
          "Hotel National",
          "National Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel National"
      },
      {
        "from": [
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marie Antoinette"
      },
      {
        "from": [
          "Hotel Quisisana",
          "Quisisana Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Quisisana"
      },
      {
        "from": [
          "(fifth Ave. Hotel)",
          "Fifth Ave. Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(fifth Ave. Hotel)"
      },
      {
        "from": [
          "New York Central System, Boston & Albany Railroad",
          "Boston & Albany Railroad , New York Central System"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System, Boston & Albany Railroad"
      },
      {
        "from": [
          "Copley Plaza Hotel",
          "Hotel Copley Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza Hotel"
      },
      {
        "from": [
          "Old Guard Albany Zouave Cadets",
          "Albany Zouave Cadets - Old Guard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Guard Albany Zouave Cadets"
      },
      {
        "from": [
          "New York Central & Hudson River R.R.",
          "New York Central & Hudson River R.R.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central & Hudson River R.R."
      },
      {
        "from": [
          "St. George's Society",
          "St. Georges Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society"
      },
      {
        "from": [
          "San Remo Hotel",
          "Hotel San Remo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Remo Hotel"
      },
      {
        "from": [
          "Shanley's",
          "Shanleys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shanley's"
      },
      {
        "from": [
          "Le Dome Of The Four Seasons",
          "Le Dôme Of The Four Seasons"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Dome Of The Four Seasons"
      },
      {
        "from": [
          "Bankers' Club Of Chicago",
          "Bankers Club Of Chicago"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bankers' Club Of Chicago"
      },
      {
        "from": [
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fraunces' Tavern"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Nasuga",
          "Nippon Yusen Kaisha -s.S.Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Nasuga"
      },
      {
        "from": [
          "(king Christian Ix Of Denmark)",
          "King Christian Ix Of Denmark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(king Christian Ix Of Denmark)"
      },
      {
        "from": [
          "Cafeteria Lunch",
          "Cafeteria - Lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafeteria Lunch"
      },
      {
        "from": [
          "Hotel St. George",
          "St. George Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George"
      },
      {
        "from": [
          "Le Café Chambord",
          "Le Cafe Chambord"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Café Chambord"
      },
      {
        "from": [
          "Oceanic Steamship Co. - Sonoma",
          "Oceanic Steamship Co. _ Sonoma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co. - Sonoma"
      },
      {
        "from": [
          "Associated Pioneers Of The Territorial Days Of California",
          "The Associated Pioneers Of The Territorial Days Of California"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Associated Pioneers Of The Territorial Days Of California"
      },
      {
        "from": [
          "Hotel Plaza",
          "Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Plaza"
      },
      {
        "from": [
          "York Hotel",
          "Hotel York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "York Hotel"
      },
      {
        "from": [
          "Hotel Royal",
          "Royal Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Royal"
      },
      {
        "from": [
          "Hotel Vendome",
          "Vendome Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome"
      },
      {
        "from": [
          "Cie Transatlantique",
          "Cie Cie Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Transatlantique"
      },
      {
        "from": [
          "Us Army - Subsistence Dept.",
          "U.S. Army - Subsistence Dept."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Us Army - Subsistence Dept."
      },
      {
        "from": [
          "Hotel Martinique",
          "Martinique Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Martinique"
      },
      {
        "from": [
          "Hotel New Weston",
          "New Weston Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel New Weston"
      },
      {
        "from": [
          "Copley-plaza Hotel",
          "Hotel Copley-plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-plaza Hotel"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kinshin Maru",
          "Nippon Yusen Kaisha -s.S.Kinshin Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kinshin Maru"
      },
      {
        "from": [
          "Hotel Victoria",
          "Victoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victoria"
      },
      {
        "from": [
          "Ponce De Leon Hotel",
          "Hotel Ponce De Leon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ponce De Leon Hotel"
      },
      {
        "from": [
          "(american Line)",
          "American Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(american Line)"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "Pontchartrain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pontchartrain"
      },
      {
        "from": [
          "Hotel Lexington",
          "Lexington Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lexington"
      },
      {
        "from": [
          "Hotel Revelstoke",
          "Revelstoke Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Revelstoke"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S. Kasuga",
          "Nippon Yusen Kaisha -ss Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S. Kasuga"
      },
      {
        "from": [
          "Hotel Roanoke",
          "Roanoke Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Roanoke"
      },
      {
        "from": [
          "Union League Club",
          "(union League Club)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Club"
      },
      {
        "from": [
          "Des Indes Hotel",
          "Hotel Des Indes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Des Indes Hotel"
      },
      {
        "from": [
          "Baltimore Hotel",
          "Hotel Baltimore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baltimore Hotel"
      },
      {
        "from": [
          "Westminster Hotel",
          "Hotel Westminster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Westminster Hotel"
      },
      {
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Statler"
      },
      {
        "from": [
          "Profile House And Hotel Vendome",
          "Hotel Vendome And Profile House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Profile House And Hotel Vendome"
      },
      {
        "from": [
          "U.S.S. New York",
          "U.S.S. New York (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. New York"
      },
      {
        "from": [
          "Gallatin Hotel",
          "Hotel Gallatin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gallatin Hotel"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbräu Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "New England Shorthand Reporter's Association",
          "New England Shorthand Reporters' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Shorthand Reporter's Association"
      }
    ],
    "description": "Mass edit cells in column sponsor_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Red Star Line - S.S.Friesland",
          "Red Star Line Ss Friesland",
          "Red Star Line-ss Friesland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - S.S.Friesland"
      },
      {
        "from": [
          "U.S.S. Raleigh",
          "U.S.S.Raleigh",
          "U.S.S.S.Raleigh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. Raleigh"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbrauhaus",
          "Hof Brau Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kobe Maru",
          "Nippon Yusen Kaisha - S.S. Kobe Maru",
          "Nipppon Yusen Kaisha - S.S. Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kobe Maru"
      },
      {
        "from": [
          "Societa La Piemontese",
          "Societa'la Piemontese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Societa La Piemontese"
      },
      {
        "from": [
          "Hotel Dupont",
          "Hotel Du Pont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Dupont"
      },
      {
        "from": [
          "A.H. Meyer Rathskeller",
          "A.H.Meyer Rathskeller"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.H. Meyer Rathskeller"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kasuga",
          "Nippon Yusen Kaisha - S.S. Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kasuga"
      },
      {
        "from": [
          "Laurel In The Pines",
          "Laurel-in-the-pines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laurel In The Pines"
      },
      {
        "from": [
          "S. S. President Wilson",
          "S.S. President Wilson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S. S. President Wilson"
      },
      {
        "from": [
          "Bellevue - Stratford",
          "Bellevue-stratford"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue - Stratford"
      },
      {
        "from": [
          "United Air Lines",
          "United Airlines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "United Air Lines"
      },
      {
        "from": [
          "Flat Iron Resaurant And Cafe",
          "Flatiron Resaurant And Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Resaurant And Cafe"
      },
      {
        "from": [
          "(club)",
          "? Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(club)"
      },
      {
        "from": [
          "Cafeteria Lunch",
          "Cafeteria-lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafeteria Lunch"
      },
      {
        "from": [
          "Copley Plaza",
          "Copley-plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza"
      },
      {
        "from": [
          "Cie Gle Transatlantique",
          "Cie.Gle. Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Gle Transatlantique"
      },
      {
        "from": [
          "Bellevue Stratford Hotel",
          "Bellevue-stratford Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Stratford Hotel"
      },
      {
        "from": [
          "Bundeshaus Restaurant",
          "Bundeshausrestaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bundeshaus Restaurant"
      },
      {
        "from": [
          "British Schools And Universities Club Of New York",
          "Britishschools And Universities Club Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "British Schools And Universities Club Of New York"
      },
      {
        "from": [
          "S.S. Amsterdam",
          "S.S.Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Amsterdam"
      },
      {
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St.Patrick"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Friendly Sons Of St. Patrick"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. - S.S. Alberta",
          "Canadian Pacific Railway Co. - S.S.Alberta"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. - S.S. Alberta"
      },
      {
        "from": [
          "Cunard Line-r.M.S. Pavonia",
          "Cunard Line R.M.S. Pavonia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cunard Line-r.M.S. Pavonia"
      },
      {
        "from": [
          "Red Star Line - S.S. Southwark",
          "Red Star Line - S.S.Southwark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - S.S. Southwark"
      },
      {
        "from": [
          "U.S.S. San Francisco",
          "U.S.S.San Francisco"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. San Francisco"
      },
      {
        "from": [
          "The Round Table",
          "The Roundtable"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Round Table"
      },
      {
        "from": [
          "St. George's Society Of New York",
          "St.George's Society Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society Of New York"
      },
      {
        "from": [
          "Menzies Hotel",
          "Menzies'hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Menzies Hotel"
      },
      {
        "from": [
          "New York State Hotel Association",
          "New-york State Hotel Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York State Hotel Association"
      },
      {
        "from": [
          "Business Men's League Of St. Louis",
          "Business Men's League Of St.Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Business Men's League Of St. Louis"
      },
      {
        "from": [
          "Pig N'whistle",
          "Pig'n Whistle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pig N'whistle"
      },
      {
        "from": [
          "St. Regis Hotel",
          "St.Regis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Regis Hotel"
      },
      {
        "from": [
          "Red Star Line - Antwerpen -new York",
          "Red Star Line Antwerpen-new York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - Antwerpen -new York"
      },
      {
        "from": [
          "U. S. S. Wyoming",
          "U.S.S. Wyoming"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. Wyoming"
      },
      {
        "from": [
          "The Southern Berkshire Society Of New York",
          "Southern Berkshire Society Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Southern Berkshire Society Of New York"
      },
      {
        "from": [
          "Hamburg-amerika Linie",
          "Hamburg Amerika Linie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-amerika Linie"
      },
      {
        "from": [
          "Roger's Restaurant",
          "Rogers'restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roger's Restaurant"
      },
      {
        "from": [
          "Red Star Line - S.S.Westernland",
          "Red Star Line - Ss Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - S.S.Westernland"
      },
      {
        "from": [
          "O.D.",
          "O. D."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "O.D."
      },
      {
        "from": [
          "B&o Blue Line",
          "B.& O. Blue Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "B&o Blue Line"
      },
      {
        "from": [
          "St. Andrew's Society Of The State Of New York",
          "St.Andrews Society Of The State Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Andrew's Society Of The State Of New York"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. - S.S. Athabasca",
          "Canadian Pacific Railway Co. - S.S.Athabasca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. - S.S. Athabasca"
      },
      {
        "from": [
          "Hotel La Salle",
          "Hotel Lasalle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel La Salle"
      },
      {
        "from": [
          "St. Francis Hotel",
          "St.Francis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "The Waldorf-astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "Smith & Mcnell's",
          "Smith & Mc Nells"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mcnell's"
      },
      {
        "from": [
          "Hotel Mcalpin",
          "Hotel Mc Alpin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Mcalpin"
      },
      {
        "from": [
          "Siegel Cooper Co.",
          "Siegel-cooper Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Siegel Cooper Co."
      },
      {
        "from": [
          "Copley-plaza Hotel",
          "Copley Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-plaza Hotel"
      },
      {
        "from": [
          "Simpson's In The Strand",
          "Simpson's-in-the-strand"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Simpson's In The Strand"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Nasuga",
          "Nippon Yusen Kaisha - S.S. Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Nasuga"
      },
      {
        "from": [
          "Tyn-y-coed",
          "Tyny Coed"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tyn-y-coed"
      },
      {
        "from": [
          "U. S. S. New York",
          "U.S.S. New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. New York"
      },
      {
        "from": [
          "U. S. S. Florida",
          "U.S.S. Florida"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. Florida"
      },
      {
        "from": [
          "S.S. America",
          "S.S.America"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. America"
      },
      {
        "from": [
          "Flat Iron Restaurant & Cafe",
          "Flatiron Restaurant & Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant & Cafe"
      },
      {
        "from": [
          "U.S.M.S.Philadelphia",
          "Usms Philadelphia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S.Philadelphia"
      },
      {
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 18th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Ritz Carlton Hotel",
          "Ritz-carlton Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton Hotel"
      },
      {
        "from": [
          "Waldorf Astoria",
          "Waldorf-astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "The Cobble Stones",
          "The Cobblestones"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cobble Stones"
      },
      {
        "from": [
          "S.S. United States",
          "S. S. United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. United States"
      },
      {
        "from": [
          "Ritz Carlton",
          "Ritz-carlton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton"
      },
      {
        "from": [
          "St.Louis Club",
          "St. Louis Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Louis Club"
      },
      {
        "from": [
          "Flat Iron Restaurant",
          "Flatiron Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant"
      },
      {
        "from": [
          "(down Town Club)",
          "Downtown Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(down Town Club)"
      },
      {
        "from": [
          "Red Star Line - Antwerpen - Ny",
          "Red Star Line - Antwerpen.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - Antwerpen - Ny"
      },
      {
        "from": [
          "R.M.S. Oceanic",
          "R.M.S.Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Oceanic"
      },
      {
        "from": [
          "Cunard Steam Ship Company Limited",
          "Cunard Steamship Company Limited"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cunard Steam Ship Company Limited"
      },
      {
        "from": [
          "Smith & Mc Nell",
          "Smith & Mcnell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mc Nell"
      },
      {
        "from": [
          "Chicago Stationers Association",
          "Chicagos Stationers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Stationers Association"
      },
      {
        "from": [
          "Provinzial Liedertafel",
          "Provinzial-liedertafel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Provinzial Liedertafel"
      },
      {
        "from": [
          "A.W. Dennett",
          "A.W.Dennett"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.W. Dennett"
      },
      {
        "from": [
          "Café Des Beaux Arts",
          "Café Des Beaux-arts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Des Beaux Arts"
      }
    ],
    "description": "Mass edit cells in column sponsor_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Nordeutscher Lloyd Bremen",
          "Norddeutcher Lloyd Bremen",
          "Norddeutecher Lloyd Bremen",
          "Norddeutscher Lloyd Breman",
          "Norddeutscher Lloyds Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Hamburg-america Linie",
          "Hamburg-amerika Line",
          "Hamburg-american Line",
          "Hamburg-america Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-America Line"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Nordeutscher Lloyd Bremen",
          "Norddeutscher Lloyd Breman",
          "Norddeutscher Lloyds Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "King Edward Vii",
          "King Edard Vii",
          "King Endward Vii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Edward Vii"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Nordeutscher Lloyd Bremen",
          "Nordeuscher Lloyd Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutcher Lloyd Bremen",
          "Norddeutecher Lloyd Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Hamburg-amerika Linie",
          "Hamburg-america Linie",
          "Hamburg-america Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-America Line"
      },
      {
        "from": [
          "Hamburg-amerika Linie",
          "Hamburg-amerika Line",
          "Hamburg-america Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-America Line"
      },
      {
        "from": [
          "Hamburg-amerika Linie",
          "Hamburg-america Linie",
          "Hamburg-amerika Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-America Line"
      },
      {
        "from": [
          "New York Life Insuance Company",
          "New York Life Insurance Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Life Insurance Company"
      },
      {
        "from": [
          "New England Manufacturing Jewelers' And Silversmiths' Association",
          "New England Manufacturing Jewlers' And Silversmiths' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Manufacturing Jewelers' And Silversmiths' Association"
      },
      {
        "from": [
          "Palace Hotel Restaurat And Ladies Grill Room",
          "Palace Hotel Restaurant And Ladies Grill Room"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel Restaurat And Ladies Grill Room"
      },
      {
        "from": [
          "Great Northern System - Dining Cars",
          "Great Northern System - Dining Car"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern System - Dining Cars"
      },
      {
        "from": [
          "Sphinx Club",
          "Sphnx Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sphinx Club"
      },
      {
        "from": [
          "Hamburg-america Linie",
          "Hamburg-america Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-America Line"
      },
      {
        "from": [
          "Columbia University Restauant",
          "Columbia University Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbia University Restaurant "
      },
      {
        "from": [
          "Young Men's Christian Association",
          "Young Man's Christian Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young Men's Christian Association"
      },
      {
        "from": [
          "Great Northern Railway",
          "Great Norther Railway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern Railway"
      },
      {
        "from": [
          "Compagnie General Transatlantique",
          "Compngnie General Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compagnie General Transatlantique"
      },
      {
        "from": [
          "Ancient And Honorable Artillery Company Of Massachusetts",
          "Ancint And Honorable Artillery Company Of Massachusetts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient And Honorable Artillery Company Of Massachusetts"
      },
      {
        "from": [
          "King Umberto And Queen Margharita",
          "King Umberto And Queen Margherita"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Umberto And Queen Margharita"
      },
      {
        "from": [
          "State Department Special To The Pand-american Congress At The City Of Mexico (pullman Car Service)",
          "State Department Special To The Pan-american Congress At The City Of Mexico (pullman Car Service)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "State Department Special To The Pand-american Congress At The City Of Mexico (pullman Car Service)"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "The Walforf Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "Palace Hotel Restaurant",
          "Palace Hotel Restaurat"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel Restaurant"
      },
      {
        "from": [
          "First Panel Sheriff's Jury",
          "First Panel Sherfiff's Jury"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "First Panel Sheriff's Jury"
      },
      {
        "from": [
          "Poland Spring House",
          "Poland Springs House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Poland Spring House"
      },
      {
        "from": [
          "M.F.Lyons Dining Room",
          "M.F.Lyons Dining Rooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "M.F.Lyons Dining Room"
      },
      {
        "from": [
          "American House",
          "American Houe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American House"
      },
      {
        "from": [
          "Boston Merchants Association",
          "Boston Merchants Associationi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston Merchants Association"
      },
      {
        "from": [
          "New England Society In The City Of New York",
          "New England Sciety In The City Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society In The City Of New York"
      },
      {
        "from": [
          "Hamburg-american Line",
          "Hamburg-america Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-America Line"
      },
      {
        "from": [
          "Metropolitan Club",
          "Metropoliton Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Club"
      },
      {
        "from": [
          "America Association Of Public Accountants",
          "American Association Of Public Accountants"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Association Of Public Accountants"
      },
      {
        "from": [
          "National Wholesale Druggists' Association",
          "National Wholesale Druggests' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "National Wholesale Druggists' Association"
      },
      {
        "from": [
          "Red Star Line - Antwerpen - Ny",
          "Red Ster Line - Antwerpen - Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - Antwerpen - Ny"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd Breman"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Americal Chemical Society",
          "American Chemical Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Chemical Society"
      },
      {
        "from": [
          "Park Avenue Hotel",
          "Park Avebue Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Avenue Hotel"
      },
      {
        "from": [
          "Holland-america Line",
          "Holland-american Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Holland-America Line"
      },
      {
        "from": [
          "El Tovar Hotel",
          "El Covar Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "El Tovar Hotel"
      },
      {
        "from": [
          "Cigar Leaf Tobacco Board Of Trade Of The United States",
          "Jcigar Leaf Tobacco Board Of Trade Of The United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cigar Leaf Tobacco Board Of Trade Of The United States"
      },
      {
        "from": [
          "Pennsylvania Railroad Dining Cars",
          "Pennsylvania Railroad Dining Car"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pennsylvania Railroad Dining Cars"
      },
      {
        "from": [
          "New York Southern Society",
          "New York Southen Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Southern Society"
      },
      {
        "from": [
          "King Edward Vii",
          "King Edard Vii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Edward Vii"
      },
      {
        "from": [
          "Toyo Kisen Kaisha - Hong Kong Maru",
          "Toyo Kisen Kaisha - Hing Kong Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Toyo Kisen Kaisha - Hong Kong Maru"
      },
      {
        "from": [
          "Henri Iv Restaurant",
          "Henri Iv Restaurants"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Henri Iv Restaurant"
      },
      {
        "from": [
          "Commercial Club Of Cincinnati",
          "C0mmercial Club Of Cincinnati"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club Of Cincinnati"
      },
      {
        "from": [
          "Sheraton Hotel",
          "Sheraton Hotels"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sheraton Hotel"
      },
      {
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota",
          "Military Order Of The Loyal Legion Of The Unitd States Commandery Of The State Of Minnesota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota"
      },
      {
        "from": [
          "Cercle Francaid De L'harmonie",
          "Cercle Francais De L'harmonie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cercle Francais De L'harmonie"
      },
      {
        "from": [
          "Hamburg-amerika Linie",
          "Hamburg-amerika Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-America Line"
      },
      {
        "from": [
          "New England Society Of Pennsylvania",
          "New England Society Of Pennsylvnia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society Of Pennsylvania"
      },
      {
        "from": [
          "Dobbeltskrue Postdampskibet",
          "Dobbelskrue Postdampskibet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dobbeltskrue Postdampskibet"
      },
      {
        "from": [
          "Trustees Of The Missouri Botanical Garden",
          "Trustees Of The Missoui Botanical Garden"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Trustees Of The Missouri Botanical Garden"
      }
    ],
    "description": "Mass edit cells in column sponsor_cluster"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.toTitlecase()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "event",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "event_cluster",
    "columnInsertIndex": 5,
    "description": "Create column event_cluster at index 5 based on column event using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Dinner",
          "[dinner]",
          "(dinner)",
          "Dinner;",
          "Dinner (?)",
          "Dinner(?)",
          "[dinner?]",
          "(?dinner?)",
          "Dinner,",
          "Dinner?",
          "[?dinner?]",
          "[dinner ?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Lunch",
          "[lunch]",
          "(?lunch?)",
          "Lunch;",
          "[lunch?]",
          "(lunch)",
          "Lunch (?)",
          "Lunch."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch"
      },
      {
        "from": [
          "Breakfast",
          "[breakfast]",
          "Breakfast;",
          "Breakfast (?)",
          "Breakfast(?)",
          "[breakfast ?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast"
      },
      {
        "from": [
          "Daily Menu",
          "(daily Menu)",
          "Daily Menu;",
          "[daily Menu?]",
          "[daily] Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu"
      },
      {
        "from": [
          "Supper",
          "Supper (?)",
          "Supper(?)",
          "Supper;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper"
      },
      {
        "from": [
          "Carte Du Jour",
          "(carte Du Jour)",
          "Carte Du Jour;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carte Du Jour"
      },
      {
        "from": [
          "Lunch & Dinner",
          "Lunch; Dinner",
          "[?dinner? - Lunch?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch & Dinner"
      },
      {
        "from": [
          "Fruhstuck-breakfast",
          "Fruhstuck/breakfast",
          "Fruhstuck/breakfast;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fruhstuck-breakfast"
      },
      {
        "from": [
          "Daily Menu, Dinner",
          "Daily Dinner Menu",
          "Daily Menu; Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu, Dinner"
      },
      {
        "from": [
          "A La Carte; Dinner",
          "Dinner A La Carte",
          "Dinner; A La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A La Carte; Dinner"
      },
      {
        "from": [
          "Daily Lunch Menu",
          "Daily Menu, Lunch",
          "Daily Menu; Lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Lunch Menu"
      },
      {
        "from": [
          "Lunch Or Dinner",
          "Dinner Or Lunch",
          "Lunch &/or Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch Or Dinner"
      },
      {
        "from": [
          "Luncheon",
          "[luncheon]",
          "Luncheon;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon"
      },
      {
        "from": [
          "Anniversary Dinner",
          "Anniversary Dinner?",
          "Anniversary [dinner]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Dinner"
      },
      {
        "from": [
          "Mittagessen",
          "Mittag-essen",
          "Mittagessen;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mittagessen"
      },
      {
        "from": [
          "Inspection Trip - Luncheon",
          "Inspection Trip, Luncheon",
          "Inspection Trip, Luncheon;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Inspection Trip - Luncheon"
      },
      {
        "from": [
          "Banquet And Reception",
          "Reception And Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet And Reception"
      },
      {
        "from": [
          "Table D'hote Dinner",
          "Dinner Table D'hote"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Table D'hote Dinner"
      },
      {
        "from": [
          "Afternoon Tea",
          "Afternoon Tea ["
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Afternoon Tea"
      },
      {
        "from": [
          "Dinner - Second Cabin",
          "Dinner Second Cabin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner - Second Cabin"
      },
      {
        "from": [
          "Inspection Trip, Dinner",
          "Inspection Trip, Dinner;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Inspection Trip, Dinner"
      },
      {
        "from": [
          "Mittagessen/dinner",
          "Mittagessen[dinner]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mittagessen/dinner"
      },
      {
        "from": [
          "Wine List",
          "Wine List;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wine List"
      },
      {
        "from": [
          "Dinner,second Cabin",
          "Dinner-second Cabin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner,second Cabin"
      },
      {
        "from": [
          "Reunion",
          "[?reunion?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reunion"
      },
      {
        "from": [
          "Luncheon Table D'hote",
          "Table D'hote Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon Table D'hote"
      },
      {
        "from": [
          "Ladies Night",
          "Ladies' Night"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ladies Night"
      },
      {
        "from": [
          "Breakfast And Supper",
          "Supper And Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast And Supper"
      },
      {
        "from": [
          "Wedding",
          "Wedding(?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wedding"
      },
      {
        "from": [
          "Reception",
          "[reception]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reception"
      },
      {
        "from": [
          "Washington's Birthday Banquet",
          "Banquet (washington's Birthday?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington's Birthday Banquet"
      },
      {
        "from": [
          "Abend-essen",
          "Abendessen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Abend-essen"
      },
      {
        "from": [
          "Menu",
          "Menu;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Menu"
      },
      {
        "from": [
          "Annual Dinner",
          "[annual Dinner?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Breakfast (?) Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington",
          "Breakfast Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast (?) Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington"
      },
      {
        "from": [
          "Diner",
          "[diner]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Diner"
      },
      {
        "from": [
          "Dinner To Above",
          "Dinner To Above;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner To Above"
      },
      {
        "from": [
          "Daily Lunch;",
          "Daily Lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Lunch;"
      },
      {
        "from": [
          "Luncheon A La Carte",
          "Luncheon, A La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon A La Carte"
      },
      {
        "from": [
          "Lincoln's Birthday Dinner",
          "Dinner, Lincolns Birthday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lincoln's Birthday Dinner"
      },
      {
        "from": [
          "New Year's Dinner",
          "New Years Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Year's Dinner"
      },
      {
        "from": [
          "Fifth Annual Dinner",
          "Dinner, Fifth Annual"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Annual Dinner"
      },
      {
        "from": [
          "St. Valentine's Day Dinner",
          "St. Valentines Day Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Valentine's Day Dinner"
      },
      {
        "from": [
          "Fruhstuck/lunch",
          "Fruhstuck-lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fruhstuck/lunch"
      },
      {
        "from": [
          "New Year's Day Dinner",
          "New Years Day Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Year's Day Dinner"
      },
      {
        "from": [
          "Eighth Annual Banquet",
          "Eighth Annual Banquet'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eighth Annual Banquet"
      },
      {
        "from": [
          "Daily Menu, Breakfast",
          "Daily Breakfast Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu, Breakfast"
      },
      {
        "from": [
          "Daily Menu, Luncheon",
          "Daily Luncheon Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu, Luncheon"
      },
      {
        "from": [
          "Private Dinner",
          "[private Dinner?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Private Dinner"
      },
      {
        "from": [
          "Inspection Trip, Breakfast",
          "Inspection Trip - Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Inspection Trip, Breakfast"
      },
      {
        "from": [
          "Mittagessen - Dinner",
          "Mittagessen [dinner]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mittagessen - Dinner"
      },
      {
        "from": [
          "Lunch-dinner",
          "Lunch;dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch-dinner"
      },
      {
        "from": [
          "Middag/dinner",
          "Middag-dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Middag/dinner"
      },
      {
        "from": [
          "Daily Bill Of Fare",
          "Daily Bill Of Fare;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Bill Of Fare"
      }
    ],
    "description": "Mass edit cells in column event_cluster"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "currency",
          "expression": "grel:value != \"Dollars\"",
          "columnName": "currency",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "currency",
          "expression": "grel:value != \"Dollars\"",
          "columnName": "currency",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "currency",
          "expression": "grel:value != \"Dollars\"",
          "columnName": "currency",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  }
]